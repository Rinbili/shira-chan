type Mutation {
    sign(input:SignInput!): Token
    receive(input:ReceiveInput): Boolean @hasPermission(role: SECRETARY)
    # login(phone: String!, password: String!): Token
    # logout: Boolean
    # The input and the output are types generated by Ent.
    createUser(input: CreateUserInput!): User @hasPermission(role: ADMIN)
    createOrder(input: CreateOrderInput!): Order @hasPermission(role: USER)
    updateUser(id: ID!, input: UpdateUserInput!): User @hasPermission(role: ADMIN)
    updateOrder(id: ID!, input: UpdateOrderInput!): Order @hasPermission(role: SECRETARY)
}

type Token{
    token: String
    is_admin:Boolean
    is_secretary:Boolean
}

input SignInput {
    """用户名"""
    uname: String
    """密码"""
    passwd: String!
    """手机号码"""
    phone: String!
}


# 权限验证
directive @hasPermission(role: Role!) on FIELD_DEFINITION

enum Role {
    ADMIN
    SECRETARY
    USER
}

input ReceiveInput{
    uid: ID!
    oid: ID!
}